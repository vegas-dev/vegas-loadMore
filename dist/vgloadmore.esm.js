// @vegas-VGLoadMore v1.0.4
class t{constructor(t,e,n){this.btn=t||void 0,this.settings=s({params:this.btn.dataset.params||{},route:this.btn.dataset.route||"",offset:parseInt(this.btn.dataset.offset)||0,limit:parseInt(this.btn.dataset.limit)||12},e),this.fOffset=this.settings.offset,this.btn&&this.settings.route?this.click(this.btn,n):console.error("Initialization failed")}click(t,s){const e=this;let n=e.settings.params;t.onclick=function(i){let o=t.innerText;return n={limit:e.settings.limit,offset:e.settings.offset},s&&"onClick"in s&&"function"==typeof s.onClick&&s.onClick(e,i),e.run(n,o,s),!1}}run(t,s,e){const n=this;let i=new XMLHttpRequest;i.open("GET",n.settings.route,!0),i.onreadystatechange=function(){4===this.readyState&&200===this.status&&(n.settings.offset=n.fOffset+n.settings.offset,n.btn.innerText=s,e&&"onLoad"in e&&"function"==typeof e.onLoad&&e.onLoad(n,this.responseText))},i.send()}}function s(...t){const e=t=>t&&"object"==typeof t;return t.reduce(((t,n)=>(Object.keys(n).forEach((i=>{const o=t[i],r=n[i];Array.isArray(o)&&Array.isArray(r)?t[i]=o.concat(...r):e(o)&&e(r)?t[i]=s(o,r):t[i]=r})),t)),{})}export{t as VGLoadMore};
